!function(e,t){"use strict";t.f.defaultsForMissing=function(){},t.f.checkKnowledgeBase=function(){void 0===t.opts.checkKB&&(t.opts.checkKB=t.d.kbconfig.checkValidity&&"yes"==t.d.kbconfig.checkValidity),t.opts.checkKB,e("<div>").attr("id","tombioKBReport").css("display","none").appendTo("#tombiod3vis"),e("<button>").attr("id","tombioReload").text("Reload").appendTo("#tombioKBReport"),e("<button>").attr("id","tombioContinue").text("Continue").appendTo("#tombioKBReport");var a,o,i,r,n=!0,s=!0,l=!0,c=!0,d=!0,u=!0;if(e("#tombioReload").click(function(e){window.location.reload(!0)}),e("#tombioContinue").css("margin-left","5px").click(function(a){e("#downloadspin").show(),e("#tombioKBReport").hide(),setTimeout(function(){t.f.loadcomplete("force")},100)}),e("#tombioKBReport").append(e("<h3>").text("First fix these knowledge-base problems...")),e("#tombioKBReport").append(e("<p>").html("Some problems were found with the knowledge-base. They should be easy enough to fix. Read on for more details and guidance.")),e("#tombioKBReport").append(e("<p>").html("When you've fixed one or more problems, use the <i>Save worksheets as CSV</i> button on the KB to regenerate the CSVs and then click the <i>Reload</i> button above.")),e("#tombioKBReport").append(e("<p>").html("The problems are colour-coded according to the schema shown below:")),(a=e("<ul>")).append(e('<li class="tombioValid3">').html("These are serious problems that could cause the visualisation software to malfunction.")),a.append(e('<li class="tombioValid2">').html("These problems are not likely to cause the visualisation software to malfunction, but you might not see what you expect.")),a.append(e('<li class="tombioValid1">').html("These are for information only - it may be what you intended to do, but if not, you may as well sort them out. These will not cause the visualisation software to malfunction.")),e("#tombioKBReport").append(a),a=e("<ul>"),!t.d.taxa)return console.log("ad"),a.append(e('<li class="tombioValid3">').html("The file 'taxa.csv' could not be found in the the knowledge-base folder '"+t.opts.tombiokbpath+"'")),e("#tombioKBReport").append(e("<h4>").text("On the taxa worksheet...")),e("#tombioKBReport").append(a),void e("#tombioKBReport").show();var h=t.d.characters.map(function(e){return e.Character}),p=Object.keys(t.d.taxa[0]).filter(function(e){return""!=e}),m=[];t.d.values.forEach(function(e){e.Character&&-1==m.indexOf(e.Character)&&m.push(e.Character)});var f=t.d.characters.filter(function(e){return"numeric"==e.ValueType&&p.indexOf(e.Character)>-1}).map(function(e){return e.Character}),b=t.d.characters.filter(function(e){return("ordinal"==e.ValueType||"ordinalcircular"==e.ValueType)&&p.indexOf(e.Character)>-1}).map(function(e){return e.Character}),y=t.d.characters.filter(function(e){return"ordinalcircular"==e.ValueType&&p.indexOf(e.Character)>-1}).map(function(e){return e.Character});if(a=e("<ul>"),o=["Key","Type","Mandatory","Value","Date","Notes"],t.d.config.columns)o.forEach(function(o){-1==e.inArray(o,t.d.config.columns)&&(a.append(e('<li class="tombioValid3">').html("The mandatory column <b>'"+o+"'</b> is missing.")),u=!1)});else{a.append(e('<li class="tombioValid2">').html("No CSV file was found. Identikit can function without it by providing some dummy values.")),u=!1,t.d.config.columns=o;var v=(new Date).getYear();t.d.kbmetadata.title="Indentikit - no title provided",t.d.kbmetadata.year=String(1900+v),t.d.kbmetadata.authors="Anon",t.d.kbmetadata.version="0.1"}if(w("title","You should specify a title for the KB (Key - title). This is used to generate a citation. A default will be used.")||(t.d.kbmetadata.title="Indentikit - no title provided"),!w("year","You should specify a year for the KB (Key - year). This is used to generate a citation. Curent year will be used.")){v=(new Date).getYear();t.d.kbmetadata.year=String(1900+v)}function w(o,i){return!(!t.d.kbmetadata[o]||""==String(t.d.kbmetadata[o]).trim())||(u=!1,a.append(e('<li class="tombioValid2">').text(i)),!1)}w("authors","You should specify one or more authors for the KB (Key - authors). This is used to generate a citation. Authors will appear in the citation exactly as you specify them.")||(t.d.kbmetadata.authors="Anon"),w("version","You should specify a version for the KB (Key - version). This is used to generate a citation. The value 0.1 will be used.")||(t.d.kbmetadata.version="0.1"),u||(e("#tombioKBReport").append(e("<h4>").text("On the config worksheet...")),e("#tombioKBReport").append(a)),a=e("<ul>"),t.d.taxa[0].taxon||(a.append(e('<li class="tombioValid3">').html("There must be a column called <i>taxon</i> which stores the names of the taxa you are working with.")),n=!1);var x,g=/^[a-zA-Z0-9\-_]+$/;Object.keys(t.d.taxa[0]).forEach(function(t,o){g.test(t)||(a.append(e('<li class="tombioValid3">').html("<b>'"+t+"'</b> (column "+(o+1)+") is not a valid identifier for a character. Use only alphanumerics with no spaces.")),n=!1)});var T=/^(\d+(\.\d*)?|\.\d+)$/,k=/^\[(\d+(\.\d*)?|\.\d+)-(\d+(\.\d*)?|\.\d+)\]$/;f.forEach(function(o){t.d.taxa.forEach(function(t){(x=t[o])||""==x||console.log(t.taxon,o,x),""==x||"n/a"==x||"novalue"==x||"?"==x||"#"==x.substr(0,1)||T.test(x)||k.test(x)||(a.append(e('<li class="tombioValid3">').html("The value <b>'"+x+"'</b> is not a valid for the numeric character <b>'"+o+"'</b> and taxon <b>'"+t.taxon+"'</b>. Values must be a number or a range in the form '[x-y]'. (Other permitted values are '?', 'n/a', 'novalue' and no specified value.)")),n=!1)})});var C=/^\[[^-]+-[^-]+\]$/;b.forEach(function(o){var i=t.d.values.filter(function(e){return e.Character==o}),r=[];t.d.values.forEach(function(e){e.Character==o&&e.StateGroup&&-1==r.indexOf(e.StateGroup)&&r.push(e.StateGroup)}),t.d.taxa.forEach(function(t){if(""!=(x=t[o])&&"n/a"!=x&&"novalue"!=x&&"?"!=x&&"#"!=x.substr(0,1))x.split("|").forEach(function(s){var l=!0;if((s=s.trim()).length>3&&("(m)"==s.substr(s.length-3,3)||"(f)"==s.substr(s.length-3,3))&&(s=s.substr(0,s.length-3).trim()),C.test(s))var c=s.slice(1,-1).split("-").slice(0,2);else c=[s];if(c.forEach(function(s){s=s.trim(),0==i.filter(function(e){return e.CharacterState==s}).length&&-1==r.indexOf(s)&&(a.append(e('<li class="tombioValid2">').html("The value <b>'"+s+"'</b> for character <b>'"+o+"'</b> and taxon <b>'"+t.taxon+"'</b> is not represented in the values worksheet either as a state value or a state group. All character state values for ordinal and ordinalcircular characters must be represented on the values worksheet.")),n=!1,l=!1)}),l&&2==c.length&&-1==y.indexOf(o)){var d=i.map(function(e){return e.CharacterState});d.indexOf(c[0])>d.indexOf(c[1])&&(a.append(e('<li class="tombioValid2">').html("The ordinal range <b>'"+s+"'</b> for character <b>'"+o+"'</b> and taxon <b>'"+t.taxon+"'</b> is not valid since the start of the range appears after the end in the ordinal values expressed on the values worksheet for this character.")),n=!1)}})})}),n||(e("#tombioKBReport").append(e("<h4>").text("On the taxa worksheet...")),e("#tombioKBReport").append(a)),a=e("<ul>"),o=["Group","Character","Label","Help","Status","ValueType","ControlType","Params","Weight"],i=["HelpShort"],t.d.characters.columns?t.d.characters.forEach(function(e){""==e.Group&&(e.Group="None")}):(a.append(e('<li class="tombioValid2">').html("No CSV file was found. Identikit can function without it by providing some default values, but you will need to use it to make use of many Identikit features.")),s=!1,t.d.characters.columns=[...o,...i,"Latitude"],t.d.taxa.columns.forEach(function(e){t.d.characters.push({Group:"taxon"==e.toLowerCase()?"taxonomy":"None",Character:e.toLowerCase(),Label:e,Help:"",HelpShort:"",Status:"taxon"==e.toLowerCase()?"":"key",ValueType:"text",ControlType:"single",Params:"",Weight:"10",Latitude:""}),h.push(e.toLowerCase())})),o.forEach(function(o){-1==e.inArray(o,t.d.characters.columns)&&(a.append(e('<li class="tombioValid3">').html("The madatory column <b>'"+o+"'</b> is missing.")),s=!1)}),i.forEach(function(o){-1==e.inArray(o,t.d.characters.columns)&&(a.append(e('<li class="tombioValid1">').html("The optional column <b>'"+o+"'</b> is missing.")),s=!1)}),-1==e.inArray("Strictness",t.d.characters.columns)&&-1==e.inArray("Latitude",t.d.characters.columns)?(a.append(e('<li class="tombioValid3">').html("The column <b>'Latitude'</b> is missing.")),s=!1):e.inArray("Strictness",t.d.characters.columns)>-1&&e.inArray("Latitude",t.d.characters.columns)>-1?(a.append(e('<li class="tombioValid1">').html("Columns <b>'Strictness'</b> and  <b>'Latitude'</b> are both specified. 'Strictness' has been deprecated and will be ignored in favour of 'Latitude'.")),s=!1):e.inArray("Strictness",t.d.characters.columns)>-1&&(a.append(e('<li class="tombioValid1">').html("You are using <b>'Strictness'</b> which has been deprecated (since version 1.7.0) in favour of <b>'Latitude'</b>. Strictness will still work, but you are advised to change to Latitude (see documentation).")),s=!1);var V=t.d.characters.filter(function(e){return"taxon"==e.Character});V.length>0&&"taxonomy"!=V[0].Group.toLowerCase()&&(a.append(e('<li class="tombioValid2">').html("The Taxon character must have a Group value of 'Taxonomy'. It is currently set to '"+V[0].Group+"'. Identikit will use 'Taxonomy' instead.")),s=!1,V[0].Group="taxonomy"),p.forEach(function(o,i){-1==h.indexOf(o)&&("taxon"==o?t.d.characters.push({Group:"taxonomy",Character:"taxon"}):(a.append(e('<li class="tombioValid2">').html("There is no row on the <i>characters</i> worksheet for the character <b>'"+o+"'</b> represented by a column (column "+(i+1)+") on the <i>taxa</i> worksheet. All columns on the <i>taxa</i> tab must be represented by a row in the <i>characters</i> worksheet regardless of whether or not they are used. Identikit will add default values, but to take full advantage of some facilities you wil need to add a row to the knowledge-base.")),s=!1,t.d.characters.columns.push(o),t.d.characters.push({Group:"None",Character:o,Label:o,Help:"",HelpShort:"",Status:"key",ValueType:"text",ControlType:"single",Params:"",Weight:"10",Latitude:""})))}),h.forEach(function(t){-1==p.indexOf(t)&&(a.append(e('<li class="tombioValid2">').html("There is no column on the <i>taxa</i> worksheet for the character <b>'"+t+"'</b> which is represented in the <i>characters</i> worksheet.")),s=!1)}),t.d.characters.filter(function(e){return"key"==e.Status}).forEach(function(t){var o=!0,i=!0;if(/^([1-9]|10)$/.test(t.Weight)||(a.append(e('<li class="tombioValid3">').html("You must specify a 'Weight' value for <b>'"+t.Character+"'</b> because it has a 'Status' value of 'key'.")),s=!1),void 0!==t.Strictness&&""!=t.Strictness){"numeric"!=t.ValueType&&"ordinal"!=t.ValueType&&"ordinalcircular"!=t.ValueType||/^([0-9]|10)$/.test(t.Strictness)||(a.append(e('<li class="tombioValid2">').html("For numeric, ordinal and ordinalcircular characters, 'Strictness', if specified, must be between 0 and 10. There is an invalid 'Strictness' value for <b>'"+t.Character+"'</b>.")),s=!1)}if(void 0!==t.Latitude&&""!=t.Latitude){"numeric"!=t.ValueType||/^[0-9]\d*(\.\d+)?$/.test(t.Latitude)||(a.append(e('<li class="tombioValid2">').html("For numeric characters, 'Latitude', if specified, must be a valid number. There is an invalid 'Latitude' value for <b>'"+t.Character+"'</b>.")),s=!1);"ordinal"!=t.ValueType&&"ordinalcircular"!=t.ValueType||/^(?:[0-9]|0[1-9]|10)$/.test(t.Latitude)||(a.append(e('<li class="tombioValid2">').html("For ordinal and ordinalcircular characters, 'Latitude', if specified, must be a whole number. There is an invalid 'Latitude' value for <b>'"+t.Character+"'</b>.")),s=!1)}if(-1==["numeric","ordinal","ordinalcircular","text"].indexOf(t.ValueType)&&(a.append(e('<li class="tombioValid3">').html("<b>'"+t.ValueType+"'</b>  is an invalid 'ValueType' value for <b>'"+t.Character+"'</b>. You must specify a valid 'ValueType' because it has a 'Status' value of 'key'.")),o=!1,s=!1),-1==["single","multi","spin"].indexOf(t.ControlType)&&(a.append(e('<li class="tombioValid3">').html("<b>'"+t.ControlType+"'</b> is an invalid 'ControlType' value for <b>'"+t.Character+"'</b>. You must specify a valid 'ControlType' because it has a 'Status' value of 'key'.")),i=!1,s=!1),o&&i&&-1=={numeric:["spin"],text:["single","multi"],ordinal:["single","multi"],ordinalcircular:["single","multi"]}[t.ValueType].indexOf(t.ControlType)&&(a.append(e('<li class="tombioValid3">').html("Invalid combination of 'ValueType' <b>('"+t.ValueType+"')</b> and 'ControlType' <b>('"+t.ControlType+"')</b> for <b>'"+t.Character+"'</b>. You must specify a valid combination because it has a 'Status' value of 'key'.")),s=!1),"spin"==t.ControlType){/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/.test(t.Params)||(a.append(e('<li class="tombioValid3">').html("<b>'"+t.Params+"'</b> is an invalid spin control 'Param' value for <b>'"+t.Character+"'</b>. It must have the form 'n,n,n' (where n can be any valid numeric value, including decimal).")),s=!1)}t.HelpShort&&!t.Help&&(a.append(e('<li class="tombioValid2">').html("A value for 'HelpShort' is set but there is no value for 'Help' for <b>'"+t.Character+"'</b>. You can set 'Help' without setting 'HelpShort', but not the other way around.")),s=!1)}),s||(e("#tombioKBReport").append(e("<h4>").text("On the characters worksheet...")),e("#tombioKBReport").append(a)),a=e("<ul>"),e("<ul>"),o=["Character","CharacterState","CharacterStateTranslation","StateHelp"],i=["StateHelpShort","StateGroup"],t.d.values.columns?(o.forEach(function(o){-1==e.inArray(o,t.d.values.columns)&&(a.append(e('<li class="tombioValid3">').html("The madatory column <b>'"+o+"'</b> is missing.")),l=!1)}),i.forEach(function(o){-1==e.inArray(o,t.d.values.columns)&&(a.append(e('<li class="tombioValid1">').html("The optional column <b>'"+o+"'</b> is missing.")),l=!1)}),m.forEach(function(t){-1==h.indexOf(t)&&(a.append(e('<li class="tombioValid2">').html("There is no row on the <i>characters</i> worksheet for the character <b>'"+t+"'</b> represented in the <i>values</i> worksheet.")),l=!1)}),t.d.values.forEach(function(t){t.StateHelpShort&&!t.StateHelp&&(a.append(e('<li class="tombioValid2">').html("A value for 'StateHelpShort' is set but there is no value for 'StateHelp' for <b>'"+t.Character+" - "+t.CharacterState+"'</b>. You can set 'StateHelp' without setting 'StateHelpShort', but not the other way around.")),l=!1)})):(a.append(e('<li class="tombioValid2">').html("No CSV file was found. Identikit can function without it, but you need it to take advantage of some features.")),l=!1),l||(e("#tombioKBReport").append(e("<h4>").text("On the values worksheet...")),e("#tombioKBReport").append(a)),a=e("<ul>"),o=["URI","ImageWidth","Type","Priority","Caption","Taxon","Character","State"],i=["UseFor","TipStyle","SmallURI","LargeURI"],r={ImageWidth:"100%",Type:"image-local"},t.d.media.columns?(o.forEach(function(o){-1==e.inArray(o,t.d.media.columns)&&(r[o]?r[o]:"",a.append(e('<li class="tombioValid3">').html("The madatory column <b>'"+o+"'</b> is missing.")),c=!1)}),i.forEach(function(o){-1==e.inArray(o,t.d.media.columns)&&(a.append(e('<li class="tombioValid1">').html("The optional column <b>'"+o+"'</b> is missing.")),c=!1)}),t.d.media.filter(function(e){return"image-local"==e.Type||"image-web"==e.Type}).forEach(function(t){""!=t.Character&&-1==h.indexOf(t.Character)&&(a.append(e('<li class="tombioValid2">').html("An image is specified for the character <b>'"+t.Character+"'</b> on the media worksheet, but that character is not on the characters worksheet.")),c=!1),""!=t.State&&""==t.Character&&(a.append(e('<li class="tombioValid2">').html("An image is specified for the state value <b>'"+t.State+"'</b> on the media worksheet, but no character is specified.")),c=!1)})):(a.append(e('<li class="tombioValid2">').html("No CSV file was found. Identikit can function without it, but you need it to take advantage of some features.")),c=!1),c||(e("#tombioKBReport").append(e("<h4>").text("On the media worksheet...")),e("#tombioKBReport").append(a)),a=e("<ul>"),t.d.characters.forEach((e,t)=>e.sortIndex=t),t.d.characters.sort(function(e,t){let a=e=>"taxon"==e.Character?2e3+e.sortIndex:"taxonomy"==e.Group.toLowerCase()?1e3+e.sortIndex:3e3+e.sortIndex;return a(e)-a(t)}),t.d.characters.forEach((e,t)=>delete e.sortIndex);var S=t.d.characters.filter(function(e){return"taxonomy"==e.Group.toLowerCase()}),K=S.length>1?S[S.length-1].Character:null;if(K&&"taxon"!=K&&(a.append(e('<li class="tombioValid3">').html("The last Taxonomy row representing '"+K+"' on the characters worksheet appears below the row representing 'Taxon' - it must come above.")),d=!1),"Taxon"==K&&S.length>2)for(var B=S.length-2;B>0;B--){var R=S[B].Character,E=S[B].Label,L=S[B-1].Character,O=S[B-1].Label,A=[];t.d.taxa.forEach(function(e){""!=e[R]&&-1==A.indexOf(e[R])&&A.push(e[R])}),A.forEach(function(o){var i=[];t.d.taxa.filter(function(e){return e[R]==o}).forEach(function(e){-1==i.indexOf(e[L])&&i.push(e[L])}),i.length>1&&(a.append(e('<li class="tombioValid3">').html("Taxa of "+E+" "+o+" are represented by more than one "+O+", breaking the rules of a strict hierarchical taxonomy. Check that the taxonomy columns are specified in the correct order on the characters worksheet  (at the moment "+O+" is specified at a higher level than "+E+"). If they are, then check the values for "+O+" and "+E+" on the taxa worksheet.")),d=!1)})}return d||(e("#tombioKBReport").append(e("<h4>").text("Taxonomy problems...")),e("#tombioKBReport").append(a)),!!(n&&s&&l&&c&&u&d)||(!t.opts.checkKB||(e("#tombioKBReport").show(),e("#downloadspin").hide(),!1))},t.f.mediaCheck=function(a,o,i){var r=[];return t.d.media.filter(function(e){return e[a]&&("image-local"==e.Type||"html-local"==e.Type||"image-web"==e.Type)}).forEach(function(t){var n=new Promise(function(o,i){if("image-web"==t.Type){var r=new Image;r.onload=function(){o(t[a])},r.onerror=function(){i(t[a])},r.src=t[a]}else e.ajax({url:t[a],type:"HEAD",success:function(){o(t[a])},error:function(){i(t[a])}})}).then(function(e){o(e)},function(e){i(e)});r.push(n)}),Promise.all(r)},t.f.tvkCheck=function(a,o,i){var r=[];t.d.oCharacters.tvk?(t.d.taxa.forEach(function(t){if(t.tvk.kbValue){var i=new Promise(function(a,o){e.ajax({url:"https://species-ws.nbnatlas.org/species/"+t.tvk.kbValue,dataType:"json",success:function(){a(t)},error:function(){o(t)}})}).then(function(e){a(e)},function(e){o(e)});r.push(i)}}),Promise.all(r).then(function(){i()})):i()}}(jQuery,this.tombiovis);